version: '3.8'

services:
  app-instance-1:
    build:
      context: .
      dockerfile: Dockerfile
    image: codewithkashi/redis-pro-app:latest
    ports:
      - '19000:19000' # Expose the first instance on port 19000 on the host
    environment:
      - NODE_ENV=production
      - PORT=19000 # Port for the first instance
      - INSTANCE_ID=instance-1 # Add unique identifier
      - DATABASE_URL=${DATABASE_URL} # Reference DATABASE_URL from .env
      - REDIS_URL=${REDIS_URL} # Reference REDIS_URL from .env
      - REDISHOST=${REDISHOST} # Reference REDISHOST from .env
      - REDIS_PORT=${REDIS_PORT} # Reference REDIS_PORT from .env
      - REDIS_PASSWORD=${REDIS_PASSWORD} # Reference REDIS_PASSWORD from .env
      - REDISUSER=${REDISUSER} # Reference REDISUSER from .env
    depends_on:
      - redis
    networks:
      - app-network

  app-instance-2:
    build:
      context: .
      dockerfile: Dockerfile
    image: codewithkashi/redis-pro-app:latest
    ports:
      - '19001:19000' # Expose the second instance on port 19001 on the host
    environment:
      - NODE_ENV=production
      - PORT=19000 # Port for the second instance
      - INSTANCE_ID=instance-2 # Add unique identifier
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - REDISHOST=${REDISHOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD} # Reference REDIS_PASSWORD from .env
      - REDISUSER=${REDISUSER} # Reference REDISUSER from .env
    depends_on:
      - redis
    networks:
      - app-network

  app-instance-3:
    build:
      context: .
      dockerfile: Dockerfile
    image: codewithkashi/redis-pro-app:latest
    ports:
      - '19002:19000' # Expose the third instance on port 19002 on the host
    environment:
      - NODE_ENV=production
      - PORT=19000 # Port for the third instance
      - INSTANCE_ID=instance-3 # Add unique identifier
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - REDISHOST=${REDISHOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDISUSER=${REDISUSER}
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - '6379:6379' # Exposes Redis on default port 6379
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx # Use your custom Dockerfile for Nginx
    image: codewithkashi/nginx-proxy:latest # Custom Nginx image
    ports:
      - '80:80' # Expose Nginx on port 80
    depends_on:
      - app-instance-1
      - app-instance-2
      - app-instance-3
    networks:
      - app-network
    environment:
      - INSTANCE_ID=nginx # Optionally set an identifier for Nginx

networks:
  app-network:
    driver: bridge
